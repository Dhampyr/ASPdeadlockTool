package asp.analyzer;

import org.antlr.v4.runtime.ParserRuleContext;
import org.antlr.v4.runtime.misc.NotNull;
import org.antlr.v4.runtime.tree.ErrorNode;
import org.antlr.v4.runtime.tree.TerminalNode;

import asp.parser.ASPBaseListener;
import asp.parser.ASPParser;

public class AspToAbs extends ASPBaseListener {
	
	private static final String SP = " ";
	
	/**
	 * {@inheritDoc}
	 *
	 * <p>The default implementation does nothing.</p>
	 */
	@Override public void enterProgram(@NotNull ASPParser.ProgramContext ctx) {System.out.println(ctx.MOD().toString() + SP + 
																								ctx.IDUC().toString() + ctx.SEMI().toString()); }
	
	
	/*****************************
	*							 *
	*   	  CLASS DEF			 *
	*							 *
	*****************************/
	
	
	/**
	 * {@inheritDoc}
	 *
	 * <p>The default implementation does nothing.</p>
	 */
	@Override public void enterClassSignature(@NotNull ASPParser.ClassSignatureContext ctx) {System.out.print(ctx.CLASS().toString()    + SP +
			 																						            ctx.className.getText() + SP +
			 																						            ctx.LPAR().toString()  
			 																						         ); }
	/**
	 * {@inheritDoc}
	 *
	 * <p>The default implementation does nothing.</p>
	 */
	@Override public void exitClassSignature(@NotNull ASPParser.ClassSignatureContext ctx) {System.out.println(ctx.RPAR().toString() + SP + "{"); }
	
	/**
	 * {@inheritDoc}
	 *
	 * <p>The default implementation does nothing.</p>
	 */
	@Override public void exitClassDec(@NotNull ASPParser.ClassDecContext ctx) {System.out.println(ctx.RCBRACK().getText());}
	
	
	/* ***************************
	*   	  PARAMETERS		 *
	*****************************/
	/**
	 * {@inheritDoc}
	 *
	 * <p>The default implementation does nothing.</p>
	 */
	@Override public void exitTypeVariable(@NotNull ASPParser.TypeVariableContext ctx) {System.out.print(ctx.t.getText() + SP + ctx.v.getText()); }
	/**
	 * {@inheritDoc}
	 *
	 * <p>The default implementation does nothing.</p>
	 */
	@Override public void enterSecondPair(@NotNull ASPParser.SecondPairContext ctx) { System.out.print(ctx.COMMA().getText() + SP); }
	
	
	
	/*****************************
	*							 *
	*      METHOD SIGNATURE	     *
	*							 *
	*****************************/
	/**
	 * {@inheritDoc}
	 *
	 * <p>The default implementation does nothing.</p>
	 */
	@Override public void enterMethodSignature(@NotNull ASPParser.MethodSignatureContext ctx) {System.out.print( ctx.returnedType.getText() + SP +
																							    				 ctx.methodName.getText()   +
																							    				 ctx.LPAR().getText()
																							    			   ); }
	/**
	 * {@inheritDoc}
	 *
	 * <p>The default implementation does nothing.</p>
	 */
	@Override public void exitMethodSignature(@NotNull ASPParser.MethodSignatureContext ctx)  { System.out.print(ctx.RPAR().getText()); }
	
	
	/*****************************
	*							 *
	*      		BODY		     *
	*							 *
	*****************************/
	
	/**
	 * {@inheritDoc}
	 *
	 * <p>The default implementation does nothing.</p>
	 */
	@Override public void enterBody(@NotNull ASPParser.BodyContext ctx) { System.out.println(ctx.LCBRACK().getText());}
	/**
	 * {@inheritDoc}
	 *
	 * <p>The default implementation does nothing.</p>
	 */
	@Override public void exitBody(@NotNull ASPParser.BodyContext ctx) { System.out.println(ctx.RCBRACK().getText());}
	
	/* ***************************
	*    VARIABLE DECLARATION	 *
	******************************/
	
	/**
	 * {@inheritDoc}
	 *
	 * <p>The default implementation does nothing.</p>
	 */
	@Override public void exitObjDec(@NotNull ASPParser.ObjDecContext ctx) {System.out.println(ctx.t.getText() + SP + 
																							 ctx.v.getText() + 
																							 ctx.SEMI().getText()); }
	/**
	 * {@inheritDoc}
	 *
	 * <p>The default implementation does nothing.</p>
	 */
	@Override public void exitIntDec(@NotNull ASPParser.IntDecContext ctx) {System.out.println(ctx.t.getText() + SP + 
			 																				 ctx.v.getText() + SP +
			 																				 ctx.ASSIGN().getText() + SP +
			 																				 ctx.NUMBER().getText() + SP +
			 																				 ctx.SEMI().getText()); }
	/**
	 * {@inheritDoc}
	 *
	 * <p>The default implementation does nothing.</p>
	 */
	@Override public void exitBoolDec(@NotNull ASPParser.BoolDecContext ctx) {System.out.println(ctx.t.getText() + SP + 
			 																				   ctx.v.getText() + SP +
			 																				   ctx.ASSIGN().getText() + SP +
			 																				   ctx.val.getText() + SP +
			 																				   ctx.SEMI().getText()); }
	
	
	/* ****************************
	*   	  STATEMENT			 *
	*****************************/
	
	/**
	 * {@inheritDoc}
	 *
	 * <p>The default implementation does nothing.</p>
	 */
	@Override public void enterSkipStmt(@NotNull ASPParser.SkipStmtContext ctx) { System.out.println(ctx.SKIP().toString() + ctx.SEMI().toString()); }
	/**
	 * {@inheritDoc}
	 *
	 * <p>The default implementation does nothing.</p>
	 */
	@Override public void enterAssignStmt(@NotNull ASPParser.AssignStmtContext ctx) { System.out.print(ctx.l.getText() + SP + 
																									   ctx.ASSIGN().toString() + SP); }
//	/**
//	 * {@inheritDoc}
//	 *
//	 * <p>The default implementation does nothing.</p>
//	 */
//	@Override public void exitStmt(@NotNull ASPParser.StmtContext ctx) { System.out.println(";");}
	
	
	/**
	 * {@inheritDoc}
	 *
	 * <p>The default implementation does nothing.</p>
	 */
	@Override public void enterMethodCall(@NotNull ASPParser.MethodCallContext ctx) {System.out.println( ctx.elem.getText()  +
								 													 					 ctx.DOT().getText() + 
								 													 					 ctx.methodName.getText() +
								 													 					 ctx.LPAR().getText() + 
								 													 					 ctx.par.getText()    +
								 													 					 ctx.RPAR().getText()
								 													 				   );}
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	/**
	 * {@inheritDoc}
	 *
	 * <p>The default implementation does nothing.</p>
	 */
	@Override public void enterValue(@NotNull ASPParser.ValueContext ctx) { System.out.print(ctx.val.toString() + " "); }
//	/**
//	 * {@inheritDoc}
//	 *
//	 * <p>The default implementation does nothing.</p>
//	 */
//	@Override public void enterLcbrak(@NotNull ASPParser.LcbrakContext ctx) {  System.out.print("{"); }
//	/**
//	 * {@inheritDoc}
//	 *
//	 * <p>The default implementation does nothing.</p>
//	 */
//	@Override public void enterVariable(@NotNull ASPParser.VariableContext ctx) { System.out.print(ctx.IDLC().getText() + " "); }
	/**
	 * {@inheritDoc}
	 *
	 * <p>The default implementation does nothing.</p>
	 */
	@Override public void enterValAritExp(@NotNull ASPParser.ValAritExpContext ctx) { System.out.print(ctx.n.getText() + " "); }

	
	
	
	
	
	

}
