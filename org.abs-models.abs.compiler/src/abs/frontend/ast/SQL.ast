/////////////////////////////////
////// ABS SQL Extensions ///////
/////////////////////////////////

SqlStmt : Stmt ::= Stmt;

abstract SqlExp : EffExp;
SqlSelectExp : SqlExp ::= <Distinct:Boolean> SqlAttrsDef SqlRelationRef
    [SqlCondition] SqlGroupingAttribute:PureExp* SqlOrderingAttribute*;
abstract SqlModifyExp : SqlExp;
SqlInsertExp : SqlModifyExp ::= SqlRelationRef SqlAttrRef:PureExp* SqlTupleConstant*;
SqlUpdateExp : SqlModifyExp ::= SqlRelationRef SqlAttrAssignment* [SqlCondition];

// SqlSelectExp
abstract SqlAttrsDef;
SqlAllAttrsDef : SqlAttrsDef;
SqlExplicitAttrsDef : SqlAttrsDef ::= SqlAttrDef*;
abstract SqlAttrDef ::= PureExp; // expression defining the name of the attribute
SqlProjectionAttrDef : SqlAttrDef;
SqlCalcAttrDef : SqlAttrDef ::= SqlAggregateFunction;

abstract SqlRelationRef;
SqlDbRelationRef : SqlRelationRef ::= <RelationName>;
SqlVarOrFieldRelationRef : SqlRelationRef ::= VarOrFieldUse;
SqlJoinRelationRef : SqlRelationRef ::= <Type> Relation1:SqlRelationRef Relation2:SqlRelationRef;

abstract SqlCondition;
SqlCompoundCondition : SqlCondition ::= Condition1:SqlCondition <Operator> Condition2:SqlCondition;
SqlComparisonCondition : SqlCondition ::= Operand1:SqlTupleScalarFunction SqlComparisonRelation Operand2:SqlTupleScalarFunction;
SqlIsNullCondition : SqlCondition ::= AttributeName:StringLiteral;
SqlNegatedCondition : SqlCondition ::= SqlCondition;

SqlComparisonRelation ::= <Operator>;

abstract SqlTupleScalarFunction;
SqlTupleAttributeValue : SqlTupleScalarFunction ::= <AttributeName>;
abstract SqlTupleConstant : SqlTupleScalarFunction;
SqlTupleStringConstant : SqlTupleConstant ::= <Value>;
SqlTupleIntConstant : SqlTupleConstant ::= <Value:int>;
SqlTupleBoolConstant : SqlTupleConstant ::= <Value:Boolean>;
SqlTupleVarOrFieldConstant : SqlTupleConstant ::= VarOrFieldUse;
SqlTupleBinaryFunction : SqlTupleScalarFunction ::= <Operator> Function1:SqlTupleScalarFunction Function2:SqlTupleScalarFunction;
SqlTupleCaseFunction : SqlTupleScalarFunction ::= SqlTupleCaseBranch* ElseFunction:SqlTupleScalarFunction;

SqlTupleCaseBranch ::= SqlCondition SqlTupleScalarFunction;

SqlAggregateFunction ::= <Name> [SqlTupleScalarFunction];

SqlOrderingAttribute ::= PureExp <Ascending:Boolean>;

// SqlUpdateExp
SqlAttrAssignment ::= AttrRef:PureExp SqlTupleScalarFunction;